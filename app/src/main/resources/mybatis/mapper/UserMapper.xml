<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gekal.spring.template.infrastructure.repository.mapper.UserMapper">

  <resultMap id="UserResultMap" type="cn.gekal.spring.template.domain.model.User">
    <id property="id" column="id" javaType="java.util.UUID" jdbcType="OTHER" typeHandler="cn.gekal.spring.template.infrastructure.config.UUIDTypeHandler"/>
    <result property="username" column="name"/>
    <result property="email" column="email"/>
    <result property="createdAt" column="created_at" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP" typeHandler="cn.gekal.spring.template.infrastructure.config.LocalDateTimeTypeHandler"/>
    <result property="updatedAt" column="updated_at" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP" typeHandler="cn.gekal.spring.template.infrastructure.config.LocalDateTimeTypeHandler"/>
  </resultMap>

  <select id="findById" resultMap="UserResultMap">
    SELECT id, name, email, created_at, updated_at
    FROM example.users
    WHERE id = #{id,javaType=java.util.UUID,jdbcType=OTHER,typeHandler=cn.gekal.spring.template.infrastructure.config.UUIDTypeHandler}
  </select>

  <select id="findAll" resultMap="UserResultMap">
    SELECT id, name, email, created_at, updated_at
    FROM example.users
  </select>

  <insert id="insert" parameterType="cn.gekal.spring.template.domain.model.User">
    INSERT INTO example.users (id, name, email, password, created_at, updated_at)
    VALUES (
      #{id,javaType=java.util.UUID,jdbcType=OTHER,typeHandler=cn.gekal.spring.template.infrastructure.config.UUIDTypeHandler},
      #{username},
      #{email},
      'default_password', <!-- Password field is required but not in the User model -->
      #{createdAt,javaType=java.time.LocalDateTime,jdbcType=TIMESTAMP,typeHandler=cn.gekal.spring.template.infrastructure.config.LocalDateTimeTypeHandler},
      #{updatedAt,javaType=java.time.LocalDateTime,jdbcType=TIMESTAMP,typeHandler=cn.gekal.spring.template.infrastructure.config.LocalDateTimeTypeHandler}
    )
  </insert>

  <update id="update" parameterType="cn.gekal.spring.template.domain.model.User">
    UPDATE example.users
    SET name = #{username},
        email = #{email},
        updated_at = #{updatedAt,javaType=java.time.LocalDateTime,jdbcType=TIMESTAMP,typeHandler=cn.gekal.spring.template.infrastructure.config.LocalDateTimeTypeHandler}
    WHERE id = #{id,javaType=java.util.UUID,jdbcType=OTHER,typeHandler=cn.gekal.spring.template.infrastructure.config.UUIDTypeHandler}
  </update>

  <delete id="deleteById">
    DELETE FROM example.users
    WHERE id = #{id,javaType=java.util.UUID,jdbcType=OTHER,typeHandler=cn.gekal.spring.template.infrastructure.config.UUIDTypeHandler}
  </delete>
</mapper>
